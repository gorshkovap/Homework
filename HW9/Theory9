  
1) Какие средства используются для организации межпроцессного взаиомдействия?
Простые межпроцессные коммуникации можно организовать с помощью сигналов и каналов. 
Более сложными средствами IPC являются очереди сообщений, семафоры и разделяемые области памяти
Interprocess Communication 
Process1(client)       process2(server)
Kernel – ядро ОС  (обеспечивает внутреннюю синхронизацию)
File  
Memory


2) Чем файлы, отображаемые в память, отличается от разделяемой памяти?
Разделяемая память - самый быстрый способ IPC. 
OC создает и отображает участок памяти в АП каждого указанного процесса, но нужна синхронизация.
Как создать?
•	Запрос к ОС для выделения SM -> SM object
• Связать частично или полностью SM с АП процесса	

Memory mapped files - часть Ап процесса, можно использовать для IPC и работы с фаайлом, управление на уровне
filesystem => медленнее из-за работы ОС
Как создать?
• Создать отображаемый объект для существующего файла
• Связать частично или полностью с АП процесса


3) Что необходимо учитывать при создании контейнера в разделяемой памяти?
Важно учитывать время жизни: process, kernel, filesystem

4) Чем отличаются анонимные и именованные примитивы синхронизации?
• Анонимные примитивы синхронизации хранятся в shared memory
• Именованные управляются ОС

5) Как могут быть использованы библиотеки динамической компоновки DLL?

DLL (пример) библиотеки используют при обновлении патчей, когда exe слишком тяжелый и достаточно обновить файл.dll
.exe
.dll
“Library.dll”
“f”, “g”, “h”
Int (int)


В .dll
Int f (int x)
{
Return x;
}
